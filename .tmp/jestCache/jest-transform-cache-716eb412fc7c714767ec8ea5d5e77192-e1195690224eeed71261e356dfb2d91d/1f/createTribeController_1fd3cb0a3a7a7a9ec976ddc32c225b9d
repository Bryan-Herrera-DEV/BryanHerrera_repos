49d9035f7f296a6dffe4d8fc8e94a2e5
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateTribeController = void 0;
const tribe_entitie_1 = require("../../entities/tribe.entitie");
const organization_entitie_1 = require("../../entities/organization.entitie");
const http_status_1 = __importDefault(require("http-status"));
class CreateTribeController {
    run(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const { name, status, id_organization } = req.body;
                console.log(id_organization);
                const data = yield organization_entitie_1.Organization.findOneBy({
                    id_organization: parseInt(id_organization),
                });
                if (!data) {
                    res.status(http_status_1.default.NOT_FOUND).json({
                        status: "error",
                        message: "Organización no encontrada",
                    });
                }
                else {
                    const tribe = new tribe_entitie_1.Tribe();
                    if (name !== undefined && name !== null && status !== undefined) {
                        tribe.name = name;
                        tribe.status = status;
                        tribe.id_organization = id_organization;
                        yield tribe.save();
                        res.status(http_status_1.default.CREATED).json({
                            status: "success",
                            message: "Tribu creada con éxito",
                            data: tribe,
                        });
                    }
                }
            }
            catch (error) {
                res.status(http_status_1.default.INTERNAL_SERVER_ERROR).json({
                    status: "error",
                    message: "Error al crear la tribus",
                    data: error,
                });
            }
        });
    }
}
exports.CreateTribeController = CreateTribeController;
