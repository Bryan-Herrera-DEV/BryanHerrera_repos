dfc323c9f55d5af4ef6f0ce40d83de78
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
// eslint-disable-next-line @typescript-eslint/no-var-requires
const supertest = require('supertest');
const AppBackend_1 = require("../src/app/AppBackend");
const server = new AppBackend_1.AppBackend();
server.start();
const app = supertest(server.httpServer);
// prueba sobre /organization
beforeEach(() => __awaiter(void 0, void 0, void 0, function* () {
    yield app.get('/organization').expect(200);
}));
afterEach(() => {
    server.stop();
});
it('should be no users initially', () => __awaiter(void 0, void 0, void 0, function* () {
    const response = yield app.get('/organization');
    expect(response.statusCode).toBe(200);
}));
